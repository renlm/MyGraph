env: prod
initDb: false
host: mygraph.renlm.cn
replicaCount: 1
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
tolerations: []
affinity: {}
imagePullSecrets: []
image:
  repository: registry.cn-hangzhou.aliyuncs.com/rlm/mygraph
  pullPolicy: Always
  tag: latest
serviceAccount:
  create: true
  annotations: {}
  name: mygraph-service-account
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "512m"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-next-upstream: "off"
    nginx.ingress.kubernetes.io/server-snippet: |-
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      gzip on;
      gzip_vary on;
      gzip_comp_level 5;
      gzip_min_length 1k;
      gzip_disable "MSIE [1-6]\.";
      gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
  hosts:
  - host: mygraph.renlm.cn
    paths:
    - path: /
      pathType: Prefix
  tls:
  - secretName: renlm.secret
    hosts:
    - mygraph.renlm.cn
service:
  type: ClusterIP
  port: 8080
actuator:
  health:
    liveness:
      initialDelaySeconds: 3
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 20
      timeoutSeconds: 1
    readiness:
      initialDelaySeconds: 3
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 20
      timeoutSeconds: 1
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
# 子Chart配置
prometheus:
  enabled: false
  port: 9000
  portName: prometheus
  selector:
  - name: prometheus
    value: monitor
mysql:
  enabled: true
  mini: true
  database: mygraph
  user: mygraph
  password: PWD@20xx$
  nodeSelector:
    mygraph/mysql: mark
  image:
    repository: mysql
    pullPolicy: IfNotPresent
    tag: 8.0.31
  service:
    type: NodePort
    port: 3306
    nodePort: 30306
rabbitmq:
  enabled: true
  defaultVhost: /mygraph
  defaultUser: mygraph
  defaultPass: PWD@20xx$
  nodeSelector:
    mygraph/rabbitmq: mark
  image:
    repository: rabbitmq
    pullPolicy: IfNotPresent
    tag: management
  ingress:
    enabled: true
    annotations: {}
    hosts:
    - host: rabbitmq.renlm.cn
      paths:
      - path: /
        pathType: Prefix
    tls:
    - secretName: renlm.secret
      hosts:
      - rabbitmq.renlm.cn
  service:
    type: NodePort
    port: 15672
    amqpPort: 5672
    amqpNodePort: 30672
redis:
  enabled: true
  requirepass: PWD@20xx$
  nodeSelector:
    mygraph/redis: mark
  image:
    repository: redis
    pullPolicy: IfNotPresent
    tag: latest
  service:
    type: NodePort
    port: 6379
    nodePort: 30379
jenkins:
  enabled: true
  nodeSelector:
    mygraph/jenkins: mark
  image:
    repository: jenkins/jenkins
    pullPolicy: IfNotPresent
    tag: lts-jdk17
  ingress:
    enabled: true
    annotations: {}
    hosts:
    - host: jenkins.renlm.cn
      paths:
      - path: /
        pathType: Prefix
    tls:
    - secretName: renlm.secret
      hosts:
      - jenkins.renlm.cn