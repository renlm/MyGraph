# https://opentelemetry.io/zh/docs/collector/configuration/#receivers
# https://github.com/open-telemetry/opentelemetry-operator/tree/main/cmd/otel-allocator#prometheuscr-specifics
# https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/autoconfigure/README.md
# https://github.com/jaegertracing/jaeger/tree/main/docker-compose/monitor
apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    name: observability
- apiVersion: opentelemetry.io/v1alpha1
  kind: OpenTelemetryCollector
  metadata:
    name: otel
    namespace: observability
  spec:
    mode: statefulset
    image: otel/opentelemetry-collector-contrib:0.99.0
    config: |-
      receivers:
        otlp:
          protocols:
            grpc: {}
            http: {}
      processors:
        batch: {}
      exporters:
        logging:
          verbosity: detailed
        prometheus:
          endpoint: 0.0.0.0:8889
          namespace: span_metrics
        zipkin:
          endpoint: http://zipkin.istio-system.svc.cluster.local:9411/api/v2/spans
      connectors:
        spanmetrics: {}
      service:
        pipelines:
          metrics/spanmetrics:
            receivers: [spanmetrics]
            exporters: [prometheus]
          traces:
            receivers: [otlp]
            processors: [batch]
            exporters: [zipkin]
          logs:
            receivers: [otlp]
            processors: [batch]
            exporters: [logging]
- apiVersion: telemetry.istio.io/v1alpha1
  kind: Telemetry
  metadata:
    name: otel-istio
    namespace: istio-system
  spec:
    tracing:
    - providers:
      - name: otel-tracing
      randomSamplingPercentage: 1
      customTags:
        tracing:
          literal:
            value: opentelemetry
- apiVersion: opentelemetry.io/v1alpha1
  kind: OpenTelemetryCollector
  metadata:
    name: otel-sidecar
  spec:
    mode: sidecar
    image: otel/opentelemetry-collector-contrib:0.99.0
    config: |-
      receivers:
        otlp:
          protocols:
            grpc: {}
            http: {}
      processors:
        batch: {}
      exporters:
        logging:
          verbosity: detailed
        prometheus:
          endpoint: 0.0.0.0:8889
          namespace: span_metrics
        zipkin:
          endpoint: http://zipkin.istio-system.svc.cluster.local:9411/api/v2/spans
      connectors:
        spanmetrics: {}
      service:
        pipelines:
          metrics/spanmetrics:
            receivers: [spanmetrics]
            exporters: [prometheus]
          traces:
            receivers: [otlp]
            processors: [batch]
            exporters: [zipkin]
          logs:
            receivers: [otlp]
            processors: [batch]
            exporters: [logging]
- apiVersion: opentelemetry.io/v1alpha1
  kind: Instrumentation
  metadata:
    name: java-instrumentation
  spec:
    propagators:
    - tracecontext
    - baggage
    - b3
    sampler:
      type: parentbased_always_on
    java:
      image: otel/autoinstrumentation-java:latest
      env:
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: http/protobuf