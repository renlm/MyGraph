{{- if .Values.configmap.enabled }}
{{- $fullName := include "mygraph.fullname" . -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $fullName }}-configmap
data:
  {{ $fullName | nindent 2 }}-{{ .Values.env }}.yaml: |-
    server:
      port: {{ .Values.service.port }}
      shutdown: graceful
      servlet:
        session:
          cookie:
            name: {{ $fullName | upper }}
      tomcat:
        remoteip:
          remote-ip-header: X-Forwarded-For
          protocol-header: X-Forwarded-Proto
    my:
      config:
        ctx: https://{{ .Values.host }}
        wsHost: ws://{{ .Values.host }}
        wssHost: wss://{{ .Values.host }}
        wsAllowedOrigins: http://{{ .Values.host }},https://{{ .Values.host }}
        chrome:
          driverPath: /usr/bin/chromedriver
          sleepTime: 2500
    encrypt:
      keyStore:
        location: classpath:keyStore.jks
        alias: ${KEY_STORE_ALIAS:alias}
        storepass: ${KEY_STORE_STOREPASS:storepass}
    aj:
      captcha:
        cacheType: redis
        jigsaw: classpath:images/jigsaw
        picClick: classpath:images/pic-click
        type: default
        waterMark: {{ .Values.host }}
        slipOffset: 5
        aesStatus: true
        interferenceOptions: 0
    mica:
      xss:
        enabled: true
        trimText: true
        mode: clear
        prettyPrint: false
        enableEscape: false
        pathPatterns: /**
        pathExcludePatterns:
        - /static
        - /webjars
        - /markdown/**
    logging:
      level:
        root: info
        cn.renlm.mygraph: info
      file:
        name: /opt/log/{{ $fullName }}.log
      logback:
        rollingpolicy:
          maxFileSize: 512MB
          maxHistory: 30
    mybatis-plus:
      configuration:
        localCacheScope: STATEMENT
      global-config:
        db-config:
          update-strategy: IGNORED
    spring:
      servlet:
        multipart:
          max-file-size: 30MB
          max-request-size: 30MB
      thymeleaf:
        cache: true
      jackson:
        serialization:
          WRITE_DATES_AS_TIMESTAMPS: true
      data:
        redis:
          database: 1
          host: redis
          port: 6379
          password: {{ .Values.redis.requirepass }}
          timeout: 10s
          lettuce:
            pool:
              maxActive: 256
              maxWait: 2000ms
              maxIdle: 10
              minIdle: 5
      rabbitmq:
        virtual-host: {{ .Values.rabbitmq.defaultVhost }}
        host: rabbitmq
        port: 5672
        username: {{ .Values.rabbitmq.defaultUser }}
        password: {{ .Values.rabbitmq.defaultPass }}
      datasource:
        dynamic:
          primary: master
          strict: true
          datasource:
            master:
              url: jdbc:mysql://mysql:3306/{{ .Values.mysql.database }}?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&rewriteBatchedStatements=true
              username: {{ .Values.mysql.user }}
              password: {{ .Values.mysql.password }}
              driver-class-name: com.mysql.cj.jdbc.Driver
      sql:
        init:
          mode: ${DB_INIT_MODE:NEVER}
          schemaLocations:
          - classpath:db/schema/schema.sql
          - classpath:db/schema/oauth2.sql
          - classpath:org/springframework/security/oauth2/server/authorization/oauth2-authorization-schema.sql
          - classpath:org/springframework/security/oauth2/server/authorization/oauth2-authorization-consent-schema.sql
          - classpath:org/springframework/security/oauth2/server/authorization/client/oauth2-registered-client-schema.sql
          dataLocations:
          - classpath:db/data/sys.sql
          - classpath:db/data/dict.sql
          - classpath:db/data/ds-er.sql
          - classpath:db/data/doc.sql
          - classpath:db/data/oauth2.sql
          continueOnError: false
          separator: ;
      quartz:
        job-store-type: jdbc
        jdbc:
          initialize-schema: ${DB_INIT_MODE:NEVER}
        properties:
          org:
            quartz:
              scheduler:
                instanceId: AUTO
              jobStore:
                class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
                driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
                tablePrefix: QRTZ_
                isClustered: true
                misfireThreshold: 60000
                clusterCheckinInterval: 5000
                useProperties: false
              threadPool:
                class: org.quartz.simpl.SimpleThreadPool
                threadCount: 10
                threadPriority: 5
                threadsInheritContextClassLoaderOfInitializingThread: true
{{- end }}
