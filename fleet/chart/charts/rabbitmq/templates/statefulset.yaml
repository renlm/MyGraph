{{- $fullName := include "rabbitmq.fullname" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "rabbitmq.labels" . | nindent 4 }}
spec:
  serviceName: {{ $fullName }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "rabbitmq.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "rabbitmq.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: RABBITMQ_DEFAULT_VHOST
              value: {{ .Values.defaultVhost }}
            - name: RABBITMQ_DEFAULT_USER
              value: {{ .Values.defaultUser }}
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom: 
                secretKeyRef:
                  name: mygraph
                  key: defaultPassword
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: tcp-amqp
              containerPort: {{ .Values.service.amqpPort }}
              protocol: TCP
          volumeMounts:
            - name: rabbitmq-lib
              mountPath: /var/lib/rabbitmq
      volumes:
        {{- if .Values.nfs.enabled }}
        - name: rabbitmq-lib
          persistentVolumeClaim:
            claimName: {{ $fullName }}-pvc
        {{- else }}
        - name: rabbitmq-lib
          hostPath:
            path: /var/lib/rabbitmq
        {{- end }}
