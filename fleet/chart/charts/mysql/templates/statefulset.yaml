{{- $fullName := include "mysql.fullname" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "mysql.labels" . | nindent 4 }}
spec:
  serviceName: {{ $fullName }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "mysql.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "mysql.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci
            - --default_authentication_plugin=mysql_native_password
            {{- if .Values.mini }}
            - --performance_schema_max_table_instances=600
            - --table_definition_cache=400
            - --table_open_cache=256
            {{- end }}
          env:
            - name: TZ
              value: Asia/Shanghai
          envFrom:
            - secretRef:
              name: mysql-env
          ports:
            - name: tcp
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          volumeMounts:
            - name: mysql-lib
              mountPath: /var/lib/mysql
      volumes:
        {{- if .Values.nfs.enabled }}
        - name: mysql-lib
          persistentVolumeClaim:
            claimName: {{ $fullName }}-pvc
        {{- else }}
        - name: mysql-lib
          hostPath:
            path: /var/lib/mysql
        {{- end }}
